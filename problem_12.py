#HOLD

'''
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. 
The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?


round((sum(tri_num) + 1)/2)
'''
num = 1
tri_num = [1]

while True:
    dividends = range(1, round((sum(tri_num) + 1)/2) )
    divisors = []
    l_divisors = []

    for dividend in dividends:
        if sum(tri_num)%dividend == 0:
            divisors.append(dividend)
    if len(divisors) == 250:
        break
    l_divisors.append(len(divisors))
    l_divisors = sorted(l_divisors)
    num+=1
    print(sum(tri_num))
    tri_num.append(num)
    divisors = []



print(sum(tri_num))
